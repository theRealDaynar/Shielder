<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pause_snapshot = noone
music = noone
im = ds_list_create()
m = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = mainmenu or room = intro or room = tut exit
if room = level_select &amp;&amp; keyboard_check_pressed(vk_escape)
    room_goto(mainmenu)
else if keyboard_check_pressed(vk_enter) or keyboard_check_pressed(vk_escape) or keyboard_check_pressed(ord('P'))
{
    if visible
    {
        surface_free(pause_snapshot)
        instance_activate_all()
        visible = false
    }
    else
    {
        pause_snapshot = surface_create(room_width,room_height)
        surface_copy(pause_snapshot,0,0,application_surface)
        instance_deactivate_all(true)
        visible = true
    }
}
randomize()
if random(100000) &lt; 1 and !m
{
rd = http_post_string("http://feed.photobucket.com/images/cute%20anime/feed.rss", "");
m = 1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_map_find_value(async_load, "id") == rd
    {
    
    if ds_map_find_value(async_load, "status") == 0
       {
       pll = ds_list_create()
       var str = ds_map_find_value(async_load, "result");
       var p = string_pos("media:content",str)
       do
       {
       str = string_delete(str,1,p)
       str = string_delete(str,1,string_pos("url=",str)+4)
       str = string_delete(str,1,string_pos("url=",str)+4)
       var strc = string_copy(str,1,string_pos('"',str)-1)
       if string_pos("gif",strc) = 0 and string_length(strc) &gt; 10{
       ds_list_add(pll,strc)
       show_debug_message(pll[|ds_list_size(pll)-1])}
       p = string_pos("media:content",str)
       }
       until(p==0);
       if ds_list_size(im) = 0
       ds_list_add(im,sprite_add(string(pll[|irandom_range(0,ds_list_size(pll)-1)]),0,false,false,0,0))
   
       }
      }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var s = ds_list_size(im)
//show_debug_message("image event")
if ds_map_find_value(async_load, "id") == im[|s - 1]
   {
   if ds_map_find_value(async_load, "status") &lt; 0
      {
        ds_list_delete(im,s - 1)
        ds_list_add(im,sprite_add(pll[|irandom_range(0,ds_list_size(pll)-1)],0,false,false,0,0))
        show_debug_message("failed to load")
      }
      else
      {
      if s &lt;= gameomancy
      {
        show_debug_message("loaded " + string(s))
            var w = sprite_get_width(s - 1)
            var h = sprite_get_height(s - 1)
            var surf = surface_create(w,h)
            surface_set_target(surf)
            draw_sprite_stretched(im[|s-1],0,0,0,w,h)
            draw_text(0,0," ") //it will be white without this
            sprite_delete(im[|s-1])
            surface_reset_target()
            im[|s-1] = sprite_create_from_surface(surf, 0, 0, w, h, false, false, sprite_get_xoffset(s - 1), sprite_get_yoffset(s - 1));
            surface_free(surf)
            var url = string(pll[|irandom_range(0,ds_list_size(pll)-1)])
            show_debug_message(url)
             ds_list_add(im,sprite_add(url,0,false,false,0,0))
    }
    else
    {
        for(var i = 0; i &lt; s;++i)
        {
            //sprite_
            sprite_assign(i,im[|i])
            //show_debug_message(i)
            //sprite_assign(0,im[|1])
            //sprite_delete(im[|i])
        }
    }
    }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = intro
{
    audio_stop_all()
}
else if room = mainmenu or room = level_select or room = credits
{
    if !audio_is_playing(menumusic)
    {
        audio_stop_all()
        audio_play_sound_on(global.music,menumusic, 1, true)
    }
}
else if room &lt; tut2
{
    if !audio_is_playing(music1)
    {
        audio_stop_all()
        audio_play_sound_on(global.music,music1, 1, true)
    }
}
else if room &lt; levelnext
{
    if !audio_is_playing(music2)
    {
        audio_stop_all()
        audio_play_sound_on(global.music,music2, 1, true)
    }   
}
else
{
    if !audio_is_playing(bossloop)
    {
        audio_stop_all()
        audio_play_sound_on(global.music, bossloop, 1, true)
    }   
}
///save furthest room
if global.farthest_level &lt; room and room &lt; levelboss
{
    global.farthest_level = room
    save()
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(pause_snapshot)
{
    draw_surface_ext(pause_snapshot,0,0,1,1,0,c_white,.5)
}
var xx = room_width * .5
var yy = 40
var scale = sin((current_time % 2000) / 1000 * pi) * .05 + 1;
draw_sprite_ext(paused,0,xx,yy,scale,scale,0,c_white,1)
yy += sprite_get_height(paused) + 40
if point_in_rectangle(mouse_x,mouse_y,xx - sprite_get_width(menubutton) * .5,yy,xx + sprite_get_width(menubutton) * .5,yy + sprite_get_height(menubutton))
{
    if mouse_check_button_pressed(mb_left)
    {
        visible = false
        surface_free(pause_snapshot)
        room_goto(mainmenu)
    }
    draw_sprite(menubutton,1,xx,yy)
}
else
    draw_sprite(menubutton,0,xx,yy)
yy += sprite_get_height(menubutton) + 40
draw_sprite(menusound,0,xx,yy)
yy += sprite_get_height(menusound) + 40
draw_set_color(c_black)
if mouse_check_button(mb_left) and point_in_rectangle(mouse_x,mouse_y,room_width * .2 - 15,yy - 20,room_width * .8 + 15, yy + 25)
{
    global.effects_volume = clamp((mouse_x - room_width * .2)/(room_width * .6),0,1)
    audio_emitter_gain(global.effects, global.effects_volume)
    save()
}
draw_rectangle(room_width * .2, yy, room_width * .8, yy + 5,false)
var volume_x = room_width * .6 * global.effects_volume 
draw_rectangle(room_width * .2 + volume_x - 5, yy - 10, room_width * .2 + volume_x + 5, yy + 15, false)
yy += 40
draw_sprite(musicmenu,0,xx,yy)
yy += sprite_get_height(musicmenu) + 40
if mouse_check_button(mb_left) and point_in_rectangle(mouse_x,mouse_y,room_width * .2 - 15,yy - 20,room_width * .8 + 15, yy + 25)
{
    global.music_volume = clamp((mouse_x - room_width * .2)/(room_width * .6),0,1)
    audio_emitter_gain(global.music, global.music_volume)
    save()
}
draw_rectangle(room_width * .2, yy, room_width * .8, yy + 5,false)
var volume_x = room_width * .6 * global.music_volume 
draw_rectangle(room_width * .2 + volume_x - 5, yy - 10, room_width * .2 + volume_x + 5, yy + 15, false)


/*
draw_set_halign(fa_center)
draw_set_color(c_white)
draw_text_transformed(room_width * .5,100,"PAUSED",4,4,0)
draw_text_transformed(room_width * .5,300,"Main Menu",4,4,0)
draw_text_transformed(room_width * .5,600,"Volume",4,4,0)
draw_rectangle(room_width * .2, 600, room_width * .8, 605,false)
var volume_x = room_width * .6 * global.music_volume 
draw_rectangle(room_width * .2 + volume_x - 5, 590, room_width * .2 + volume_x + 5, 615, false)
draw_rectangle(room_width * .2, 600, room_width * .8, 605,false)
var volume_x = room_width * .6 * global.effects_volume 
draw_rectangle(room_width * .2 + volume_x - 5, 590, room_width * .2 + volume_x + 5, 615, false)
draw_set_color(c_black)
if mouse_check_button(mb_left)
{
if mouse_y &gt; 150 and mouse_y &lt; 450
{
    room_goto(mainmenu)
    visible = false
    surface_free(pause_snapshot)
}
else if point_in_rectangle(mouse_x,mouse_y,room_width * .2,590,room_width * .8, 615)
{
    global.music_volume = clamp((mouse_x - room_width * .2)/(room_width * .6),0,1)
    audio_master_gain(global.music_volume)
    save()
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
